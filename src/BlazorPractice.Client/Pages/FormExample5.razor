@page "/form-example-5"
@using Microsoft.Extensions.Logging
@inject ILogger<FormExample5> Logger

<PageTitle>@pageTitle</PageTitle>

<div class="alert alert-success">
    <p>
        来源：<a href="https://docs.microsoft.com/zh-cn/aspnet/core/blazor/forms-validation?view=aspnetcore-6.0#business-logic-validation-with-a-validator-component" target="_blank">link</a>
    </p>
    <p>
        当选择 Defense 时必须输入 Description。
    </p>
    <h5>
        知识点
    </h5>
    <ul>
        <li>
           未包含 DataAnnotationsValidator 组件，因此不会在窗体提交时触发数据注释验证。
        </li>
        <li>
          使用“验证器组件” CustomValidation 组件。
        </li>
    </ul>
</div>

<hr />

<h1>@pageTitle</h1>

<h4>New Ship Entry Form</h4>

<EditForm Model="@starship" OnValidSubmit="@HandleValidSubmit">
    <CustomValidation @ref="customValidation" />
    <ValidationSummary />

    <div class="row g-3">
        <div class="col-md-6">
            <label class="form-label">Primary Classification:</label>
            <InputSelect class="form-control" @bind-Value="starship.Classification">
                <option value="">Select classification ...</option>
                <option value="Exploration">Exploration</option>
                <option value="Diplomacy">Diplomacy</option>
                <option value="Defense">Defense</option>
            </InputSelect>
        </div>
        <div class="col-md-6">
            <label class="form-label">Description (optional):</label>
             <InputTextArea class="form-control" @bind-Value="starship.Description" />
        </div>
        <div class="col-md-12">
            <button class="btn btn-primary" type="submit">Submit</button>
        </div>
    </div>

</EditForm>

@code {
    private string pageTitle = "验证程序";

    private CustomValidation? customValidation;
    private Starship starship = new() { ProductionDate = DateTime.UtcNow };

    private void HandleValidSubmit()
    {
        customValidation?.ClearErrors();

        var errors = new Dictionary<string, List<string>>();

        if (starship.Classification == "Defense" &&
                string.IsNullOrEmpty(starship.Description))
        {
            errors.Add(nameof(starship.Description),
                new() { "For a 'Defense' ship classification, " +
                "'Description' is required." });
        }

        if (errors.Any())
        {
            customValidation?.DisplayErrors(errors);
        }
        else
        {
            Logger.LogInformation("HandleValidSubmit called: Processing the form");

            // Process the valid form
        }
    }
}