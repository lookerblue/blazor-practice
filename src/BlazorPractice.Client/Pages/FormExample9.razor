@page "/form-example-9"
@using Microsoft.Extensions.Logging
@implements IDisposable
@inject ILogger<FormExample9> Logger

<PageTitle>@pageTitle</PageTitle>

<div class="alert alert-success">
    <p>
        来源：<a href="https://docs.microsoft.com/zh-cn/aspnet/core/blazor/forms-validation?view=aspnetcore-6.0#enable-the-submit-button-based-on-form-validation" target="_blank">link</a>
    </p>
    <h5>
        知识点
    </h5>
    <ul>
        <li>
           ...
        </li>
    </ul>
</div>

<hr />

<h1>@pageTitle</h1>

<EditForm EditContext="@editContext" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row g-2">
        <div class="col-auto">
            <InputText @bind-Value="starship.Identifier" class="form-control" />
        </div>
        <div class="col-auto">
            <button type="submit" disabled="@formInvalid" class="btn btn-primary">Submit</button>
        </div>
    </div>

</EditForm>

@code {
    private string pageTitle = "基于窗体验证启用提交按钮";

    private Starship starship =
        new()
            {
                Identifier = "NCC-1701",
                Classification = "Exploration",
                MaximumAccommodation = 150,
                IsValidatedDesign = true,
                ProductionDate = new DateTime(2245, 4, 11)
            };
    private bool formInvalid = false;
    private EditContext? editContext;

    protected override void OnInitialized()
    {
        editContext = new(starship);
        editContext.OnFieldChanged += HandleFieldChanged;
    }

    private void HandleFieldChanged(object? sender, FieldChangedEventArgs e)
    {
        if (editContext is not null)
        {
            formInvalid = !editContext.Validate();
            StateHasChanged();
        }
    }

    private void HandleValidSubmit()
    {
        Logger.LogInformation("HandleValidSubmit called");

        // Process the valid form
    }

    public void Dispose()
    {
        if (editContext is not null)
        {
            editContext.OnFieldChanged -= HandleFieldChanged;
        }
    }
}
