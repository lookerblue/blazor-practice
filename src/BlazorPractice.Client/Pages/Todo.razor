@page "/todo"
@layout Layout

<PageTitle>Todo</PageTitle>

<div class="alert alert-success">
    <p>
        <a href="https://docs.microsoft.com/zh-cn/aspnet/core/blazor/tutorials/build-a-blazor-app?view=aspnetcore-6.0&pivots=webassembly" target="_blank">来源</a>
    </p>
    
    <div>
        了解如何：
        <ul>
            <li>
                创建待办事项列表 Blazor 应用项目
            </li>
            <li>
                修改 Razor 组件
            </li>
            <li>
                在组件中使用事件处理和数据绑定
            </li>
            <li>
                在 Blazor 应用中使用路由
            </li>
        </ul>
        在本教程结束时，你将拥有一个正常运行的待办事项列表应用。
    </div>
</div>

<div class="row">
    <div class="col-auto">
        
    </div>
</div>

<hr />

<h1>Todo (@todos.Count(todo => !todo.IsDone))</h1>

<ul class="list-group mb-3">
    @foreach (var todo in todos)
    {
        <li class="list-group-item">
            <div class="form-check">
                <input class="form-check-input" type="checkbox" @bind="todo.IsDone">
                <label class="form-check-label">
                    @todo.Title
                </label>
            </div>

            @*<input type="checkbox" @bind="todo.IsDone" class="form-check-input" />
            <input @bind="todo.Title" type="text" />*@
        </li>
    }
</ul>

<div class="row g-2">
    <div class="col-auto">
        <input placeholder="Something todo" @bind="newTodo" class="form-control"  />
    </div>
    <div class="col-auto">
        <button @onclick="AddTodo" class="btn btn-primary">Add todo</button>
    </div>
</div>


@code {
    private List<TodoItem> todos = new();

    private string? newTodo;

    private void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem { Title = newTodo });
            newTodo = string.Empty;
        }
    }
}
